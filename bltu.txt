.text
.org 0
main:
    li      a0, 5          # a0 = 5
    li      t1, 10         # a1 = 10

    slt     a0, t1         # a0 = (5 < 10)? 1 : 0   => a0 = 1
    ecall   1

    li      a1, -5         # a1 = -5
    li      t0, -10        # t0 = -10    
    sltu    a1, t0         # a1 = (5- < 10- unsigned)? 1 : 0 => a1 = 1
    mv      a0, a1
    ecall   1

    li      s0, 0x18
    jalr    ra, s0         # Jump to address in s0 (0x18), saving return in ra
       
    ecall   3              # Exit if jalr failed

branch_test:
    li      t0, -20
    mv      a0, t0
    ecall   1
    li      t1, -15
    mv      a0, t1
    ecall   1

    bltu    t0, t1, less   # if -20 < -15 (unsigned), jump to less
    bgeu    t0, t1, greater_or_equal  # if -20 >= -15 (unsigned), jump here

    ecall   3

less:
    li      a0, 1
    ecall   1              # print 1
    j       end

greater_or_equal:
    li      a0, 2
    ecall   1              # print 2

end:
    ecall   3              # exit